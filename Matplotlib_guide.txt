This file serves as a future guide for working with the matplotlib library.
To find how it can be downloaded, look at the README file.
This file solely serves for showing how the library works. Not the downloading of it

1.First import the needed stuff:
--------------------------------
import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np

2.Create a figure/graph:
--------------------------------
This step consists of a shitload of smaller steps, so I'ma split this up

2a. First initialize the data (like using lists for example)
x = [10, 20, 30, 40]
y = [20, 30, 40, 50]

2b.Then plot the data using --> plt.plot(x,y) <-- (ignore the arrows and this comment)

2c.Add additional information like a title, axis labels, and whatnot
plt.title("Simple Plot") <-- for a title
plt.ylabel("y-axis") <-- for a y_axis label
plt.xlabel("x-axis") <-- for an x_axis label

3.Actually get to see the label
--------------------------------
plt.show()

With this out of the way, here we get to the important data stuffies
--------------------------------

1.When providing lists for the plt.plot() method, make sure the lists have the same length

2.The first list contains the x-coordinates
and the second list contains the respective y-coordinates

3.In order to set the axis, make use of the plt.axis([]) method.
It takes a list of 4 numerical values: [x-start, x-end, y-start, y-end]

4. math.sqrt does not work for some reason, so use **0.5 instead

5.the format strings for color, marker and line work as follows:
fmt =" marker line color" (all as strings)

However, it is much easier to read when seperating the string into multiple things:
plt.plot(line, line**0.5, color="b", linestyle=":", marker="1")
color =... , linestyle = ... , marker = ... linewidth = ...
+ For linestyle, the default value = 1
+keep in mind that the line marker can be hard to see if the line
    consists of a lot of points in a cramped space

6.Information can be added by

6



